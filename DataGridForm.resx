<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        mNa3flIiI5tvR4M23hBEIQIO7wxjGLb0IIhAjwYxjN+YiIi23yG29CCIEEHd6Naxm9yCIQgRzZjWtZv0
        ERDxvTbe5BBECCzu8MY9G9yCIQgd2Y1rNt+g4W22222+Mggggs7tvRjGb4DghCZzeGNazbfqObbbb4Cy
        CCCyzu28MY8N7kEEcAQdWYx4L/DLIIILPG28MY8N8ZBEIQI5ss1jFt/hHMgggsg7tvD0bb3IIIIgQRze
        GsYzf4hEEHjbejGbb4yCCIEEHNt4Yx4b/FIiO7bbxttvnIIIgQWc23o8Ft/kEW229Fttt7lkEEEEHd4Y
        x4bb/L2222230EEEEFndmPBm2/Z//9oADAMBAAIAAwAAABBSDyRRQixRRRDyjjyxCRDijxSRyyBgygzC
        gQBihRRjiwASwiBxDQihixAxiQhhizBghRyhAjCjwRShyRwwhjyjiTTiiSRxhjhxRQSjhhDgTwwThRRT
        xQxhgihAiySBySSiyCzSRgSzShgAAADQjjhxDihjhhAQjBxixhSSAjiAzRzBAAgBDAABRQSSSCjSRSQS
        iSCBQTSRxAiSRgzSgTCQQAwRjhRRhBhjhxhwiQBgxjAAhTiTShyjgSSBwgABijhiCiiiASyzgQwTiDQA
        iQzSBgiwCQRAgAyhiiiiDwjSTQzjRgxThhASSiSTiyATCyiSAQCiCizQSDChSDxwTAjBghxgDgSjgSBi
        QzgxhzCQTxTRRSDTQyhCwBhgiSyChxjBAQySghQhgDDQBRRRCyRQBjhyiiQjwAgiTwyiQhSgDhgTAjCy
        iSiiRRAhCjSCjgByzzBjQQCyBDCSiQyCjgBBghhiiCSRRQSzxggQCzzQjxSzzCCwRjTiTDyzSRBhihhg
        RSSxDAQwCDiTRzCRQiDzyCgCywzgxQRBgiCwATjDgDiSDiQSBRABCwQTgSwTijDxhgySTTxRBhChRzjC
        RSBARzQQQCjyhCyDTDxDzxBySSSgijizjTThzgywwTSiTiRgxBSyRwwBAyRRijhTyDBTBBzjQRSCCyAi
        zSCDCSSAzgAADwyDgxTDgBziQTxBAzgxTTQzRgCwRygQgTwABDyiyRyTBCQwyhSQwizDRAgRARQyzSzD
        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
</value>
  </data>
</root>